 package com.itheima_5;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

/*	1.定义一个map集合,key为String类型的姓名,value为String类型地址,存入数据多条数据(假设不存在重名的情况),并用多种方式遍历
	2.定义一个map集合,key为Student类型的对象,value为String类型的地址,存入数据多条数据(需要加入对象的唯一性判断)
		(1)定义一个学生类Student，包含属性：姓名(String name)、年龄(int age)、成绩(int score)
		(2)定义Map集合，用Student对象作为key，用字符串(此表示表示学生的住址)作为value
		(3)利用四种方式遍历Map集合中的内容，格式：key::value	
*/
public class Test5 {
	public static void main(String[] args) {
		 Map<Student, String> map = new HashMap<>();
		 Student s1 = new Student("小龙女",18,100	);
		 Student s2 = new Student("杨过",25,100);
		 Student s3 = new Student("神仙姐姐",22,100);
		 map.put(s1, "古墓");
		 map.put(s2, "神雕侠侣");
		 map.put(s3, "仙剑");
		 //method1(map);
		 //method2(map);
		 Set<Student> keys = map.keySet();
		 Iterator<Student> it = keys.iterator();
		 while(it.hasNext()){
			 Student stu=it.next();
			   String value=map.get(stu);
			   System.out.println(stu+"::"+value);
		 }
	}

	private static void method2(Map<Student, String> map) {
		Set<Student> keys = map.keySet();
		 for (Student key : keys) {
			String value=map.get(key);
			System.out.println(key+"::"+value);
		}
	}

	private static void method1(Map<Student, String> map) {
		Set<Entry<Student, String>> entrySet = map.entrySet();
		 for (Entry<Student, String> entry : entrySet) {
			Student s=entry.getKey();
			String value=entry.getValue();
			System.out.println(s+"::"+value);
		}
	}
}
class Student{
	private String name;
	private int age;
	private int score;
	public Student() {
	}
	public  Student(String name, int age, int score) {
		this.name = name;
		this.age = age;
		this.score = score;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public int getAge() {
		return age;
	}
	public void setAge(int age) {
		this.age = age;
	}
	public int getScore() {
		return score;
	}
	public void setScore(int score) {
		this.score = score;
	}
	@Override
	public String toString() {
		return "Student [name=" + name + ", age=" + age + ", score=" + score + "]";
	}
	
}
