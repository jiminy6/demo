package com.itheima;

import java.util.HashMap;
import java.util.Map;
import java.util.Random;
import java.util.Set;

/*
 * 1.定义一个储物柜类，创建储物柜对象，属性：柜子的容量；
	2.最大容量为20；为储物柜对象提供存物、取物方法；
	要求：
		(1)调用存放物品方法时，传入要存入的物品名称，判断储物柜是否有空余容量，有空余则提示存放物品成功，返回一个四位数的取货码。
		(2)调用取物方法时,传入取货码，打印出对应的物品名称，若无对应的物品则提示取货码不正确；
 * */

public class cabinet{
	public static void main(String[] args) {
		cabinet c = new cabinet();
		c.setCapacity(20);
		HashMap<Integer,String> map = new HashMap<>();
		int number=c.storeThing("x"	);
		for (int i = 0; i < 19; i++) {
			c.storeThing("x");
		}
		map.put(number, "x");
		int number2=c.storeThing("xxdsd");
		map.put(number2, "xxdsd");
		System.out.println(map);
		 c.getThing(number);
	}
	private String thing;
	private int capacity;
	public String getThing() {
		return thing;
	}
	public void setThing(String thing) {
		this.thing = thing;
	}
	public int getCapacity() {
		return capacity;
	}
	public void setCapacity(int capacity) {
		this.capacity = capacity;
	}
	public cabinet() {
	}
	
	public cabinet(String thing, int capacity) {
		this.thing = thing;
		this.capacity = capacity;
	}
	public void getThing(int num,Map<Integer,String>map){
		Set<Integer> keys = map.keySet();
		if(keys.contains(num)){
			String s=map.get(num);
			System.out.println(s);
		}
		else{
			System.out.println("号码有误");
		}
		
	}
	public int storeThing(String thing){
		if(capacity>0){
			Random r = new Random();
			int x=r.nextInt(9000)+1000;
			System.out.println("存放成功");
			capacity--;
			return x;
		}
		else{
			System.out.println("空间不足");
			return -1;
		}
	}
	
}